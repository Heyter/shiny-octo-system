 --#NoSimplerr#local maxitems = CreateConVar( "drp_maxitems", "20", { FCVAR_REPLICATED, FCVAR_ARCHIVE } )local maxitemspremium = CreateConVar("drp_maxitems_prim","30",{ FCVAR_REPLICATED, FCVAR_ARCHIVE })util.AddNetworkString("clearinv")util.AddNetworkString("item")util.AddNetworkString("itemr")util.AddNetworkString("useitem")util.AddNetworkString("dropitem")util.AddNetworkString("getweedprices")util.AddNetworkString("sellweeds")local function CreateFolder()	if not file.IsDir("drpinv", "DATA") then        file.CreateDir("drpinv")    endendhook.Add( "Initialize", "FolderCreate", CreateFolder )local function finInv(ply, cmd, args)	if not isAdmin(ply) then return end	for k,v in pairs(player.GetAll()) do		v:SendInv()	endendconcommand.Add("fixinv",finInv)local function plyjoin(ply)	ply.invlock = false	local strSteamID = string.Replace(ply:SteamID(), ":", "_")	local path = "drpinv/" .. strSteamID .. ".txt"	if file.Exists( path, "DATA" ) then		ply.inv = util.JSONToTable(file.Read(path))		DarkRP.notify(ply, 0, 4, "Welcome back " .. ply:Nick() .. "! Your inventory has been loaded.")		if ply.inv == nil then ply.inv = {} ply.inv.maxitems = 0 ply:SaveInv() end	else		ply.inv = {}		ply.inv.maxitems = 0		ply:SaveInv()		DarkRP.notify(ply, 0, 4, "На сервере присутствует постоянный инвентарь, используй предмет Pocket для взаимодействия с ним")	end	ply.inv.maxitems = #ply.inv - 1	ply:SendInv()	ply.canuse = true	endhook.Add("PlayerInitialSpawn","DrpInvSpawn",plyjoin)local function plydis(ply)	ply:SaveInv()	timer.Destroy("canuse" .. ply:UniqueID())endhook.Add("PlayerDisconnected","DrpPlyLeave",plydis)local function plyuse(ply, ent)		if not inv_whitelist[ent:GetClass()] then return end		local itype = 0		if ply:GetPos():DistToSqr( ent:GetPos()) > 22500 then return end		if ent:GetClass() == "spawned_weapon" then				itype = "swep"		else 			itype = "ent"		end		class = ent:GetClass()		local max = 0		if isDonator(ply) then			max = 30		else			max = 20		end		if ply.inv.maxitems >= max then			DarkRP.notify(ply, 1, 4, "Your inventory is full!")			--print(ply.inv.maxitems,max)						ply.canuse = false			timer.Create("canuse" .. ply:UniqueID(), 1, 1,function() ply.canuse = true end)			return false		end				local item = {}		item["class"] = class		item["itype"] = itype		item["model"] = ent:GetModel()		item["name"] = ent.PrintName		if itype == "swep" then			item["w_class"] = ent:GetWeaponClass()			if ent.ammoadd then				item["ammoadd"] = ent.ammoadd			end			if ent.clip1 then				item["clip1"] = ent.clip1			end			item["name"] = names_helper[ent:GetWeaponClass()]			--PrintTable(names_helper)			print(item["w_class"],item["name"])		end		ply.inv.maxitems = ply.inv.maxitems + 1		ply:AddItem(item, 1)				ply:EmitSound("items/ammo_pickup.wav", 100, 100)				ent:Remove()		ply.canuse = false		timer.Create("canuse" .. ply:UniqueID(), 1, 1,function() ply.canuse = true end)		return false	endhook.Add("PocketUse","DrpPlyUse",plyuse)local function plysay(ply, text, tm, death)    if string.sub(text, 1, 4) == "!inv" then		ply:ConCommand("drp_showinv")        return ""    endendhook.Add("PlayerSay","DrpPlySay",plysay)local meta = FindMetaTable("Player")function meta:SaveInv()	local strSteamID = string.Replace(self:SteamID(), ":", "_")		file.Write("drpinv/" .. strSteamID .. ".txt", util.TableToJSON(self.inv))	endfunction meta:SendInv()	net.Start("clearinv")	net.Send(self)		for k,v in pairs(self.inv) do		if  k != "maxitems" then					net.Start( "item" )				net.WriteInt(k,32)				net.WriteTable(v)			net.Send(self)					end	end	endfunction meta:GetEstimatedPlantsPrice()	local sum = 0	for k,v in pairs(self.inv) do		if k != "maxitems" then			if weedPrices[v.class] != nil then				sum = sum + weedPrices[v.class]			end		end	end	return sumendfunction meta:RemoveAllWeeds()	if self.invlock then return end	self.invlock = true	local pay = self:GetEstimatedPlantsPrice()	self:addMoney(pay)	for k,v in pairs(self.inv) do		if k != "maxitems" then			if weedPrices[v.class] != nil then				self.inv[k] = nil			end		end	end	self.inv.maxitems = #self.inv - 1	self:SaveInv()	self:SendInv()	self.invlock = falseendfunction meta:SendItem(k)	net.Start( "item" )		net.WriteInt(k,32)		net.WriteTable(self.inv[k])		net.Send(self)	endfunction meta:RemoveItem(k)		net.Start( "itemr" )		net.WriteInt(k,32)	net.Send(self)	endfunction meta:AddItem(str, amt,k)	if amt>0 then		local k = math.random(429496)		while self.inv[k] != nil do			k = math.random(429496)		end		self.inv[k] = str		self:SaveInv()		self:SendItem(k)		else		self.inv[k] = nil		self:RemoveItem(k)	endendnet.Receive("sellweeds",function(len,ply)	ply:RemoveAllWeeds()end)net.Receive("getweedprices",function(l,ply)	local pay = ply:GetEstimatedPlantsPrice()	net.Start("getweedprices")	net.WriteInt(pay,32)	net.Send(ply)end)net.Receive( "dropitem", function(len, ply)  		local use = net.ReadBool()	local item = net.ReadInt(32)			local k = item	if !item or ply.inv[item] == nil then				return	end		item = ply.inv[item]	if ply:isArrested() then		return	end	local pos = ply:EyePos()	local tracedata = {}	tracedata.start = pos	tracedata.endpos = tracedata.start + ply:GetAimVector() * 85	tracedata.filter = ply	local tr = util.TraceLine(tracedata)		local ent = ents.Create(item.class)	ent:SetPos(tr.HitPos)	ent.ShareGravgun = true	ent.nodupe = true	if  item.itype=="swep" then		ent:SetWeaponClass(item.w_class)		ent:SetModel(item.model)		ent.ammoadd = item.ammoadd or ent.ammoadd		ent.clip1 = item.clip1 or ent.clip1	end	ent:Spawn()	ent:Activate()	if use then		ent:Use(ply, ply, SIMPLE_USE, 0)	end	ply.inv.maxitems = ply.inv.maxitems - 1	ply:AddItem(item, -1,k)end)